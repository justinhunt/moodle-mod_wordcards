{"version":3,"file":"spacegame.min.js","sources":["../src/spacegame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class manages the confirmation pop-up (also called the pre-flight check)\n * that is sometimes shown when a use clicks the start attempt button.\n *\n * This is also responsible for opening the pop-up window, if the quiz requires to be in one.\n *\n * @module    mod_wordcards/spacegame\n * @class     spacegame\n * @copyright  originally 2016 John Okely <john@moodle.com> , modified for Poodll 2023 Justin Hunt <justin@poodll.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/yui', 'core/notification', 'core/ajax','mod_wordcards/a4e', 'core/log', 'core/templates','core/ajax'],\n    function($, Y, notification, ajax,a4e, log, templates,Ajax) {\n\n    class Rectangle {\n        /**\n         * Constructor for storing information about a rectangle shape\n         * @param {int} left\n         * @param {int} top\n         * @param {int} width\n         * @param {int} height\n         */\n        constructor(left, top, width, height) {\n            this.left = left || 0;\n            this.top = top || 0;\n            this.width = width || 0;\n            this.height = height || 0;\n        }\n\n       right () {\n            return this.left + this.width;\n        };\n\n        bottom() {\n            return this.top + this.height;\n        };\n\n        Contains (point) {\n            return point.x > this.left &&\n                point.x < this.right() &&\n                point.y > this.top &&\n                point.y < this.bottom();\n        };\n\n        Intersect(rectangle) {\n            var retval = !(rectangle.left > this.right() ||\n                rectangle.right() < this.left ||\n                rectangle.top > this.bottom() ||\n                rectangle.bottom() < this.top);\n            return retval;\n        };\n\n    }\n\n    class GameObject {\n\n        /**\n         * Generate Game Object.\n         * @param {text} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y) {\n            if (src !== null) {\n                this.image = this.loadImage(src);\n            }\n            this.x = x;\n            this.y = y;\n            this.velocity = {x: 0, y: 0};\n            this.direction = {x: 0, y: 0};\n            this.movespeed = {x: 5, y: 3};\n            this.alive = true;\n            this.decay = 0.7;\n        }\n\n        loadImage(src) {\n            if (!this.image) {\n                this.image = new Image();\n            }\n            this.image.src = src;\n            return this.image;\n        }\n\n        update() {\n            this.velocity.x += this.direction.x * this.movespeed.x;\n            this.velocity.y += this.direction.y * this.movespeed.y;\n            this.x += this.velocity.x;\n            this.y += this.velocity.y;\n            this.velocity.y *= this.decay;\n            this.velocity.x *= this.decay;\n        };\n\n        draw (context) {\n            context.drawImage(this.image, this.x, this.y, this.image.width, this.image.height);\n        };\n\n        getRect() {\n            return new Rectangle(this.x, this.y, this.image.width, this.image.height);\n        };\n\n        die() {\n            this.alive = false;\n        };\n    }\n\n    class Player extends GameObject {\n        /**\n         * Constructor for Player class, all the information about the player\n         * @param {string} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y) {\n            super( src, x, y);\n            this.mouse = {x: 0, y: 0};\n            this.movespeed = {x: 6, y: 4};\n            this.lives = 3;\n            this.lastScore = 0;\n        }\n\n        update(bounds) {\n            if (app.mouseDown || app.touchDown) {\n                if (this.x < this.mouse.x - (this.image.width)) {\n                    app.player.direction.x = 1;\n                } else if (this.x > this.mouse.x) {\n                    app.player.direction.x = -1;\n                } else {\n                    app.player.direction.x = 0;\n                }\n                if (this.y < this.mouse.y - (this.image.height)) {\n                    app.player.direction.y = 1;\n                } else if (this.y > this.mouse.y) {\n                    app.player.direction.y = -1;\n                } else {\n                    app.player.direction.y = 0;\n                }\n            }\n            super.update(bounds);\n\n            if (this.x < bounds.x - this.image.width) {\n                this.x = bounds.width;\n            } else if (this.x > bounds.width) {\n                this.x = bounds.x - this.image.width;\n            }\n            if (this.y < bounds.y) {\n                this.y = bounds.y;\n            } else if (this.y > bounds.height - this.image.height) {\n                this.y = bounds.height - this.image.height;\n            }\n        };\n\n        Shoot() {\n            app.playSound(\"laser\");\n            var shooter = this;\n            app.gameObjects.unshift(new Laser( app.player.x, app.player.y,shooter, true, 24));\n            app.canShoot = false;\n        }\n\n        die() {\n            super.die();\n            app.playSound(\"explosion\");\n            app.spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 200, \"#FFCC00\");\n            this.lastScore = app.score;\n            app.endGame();\n        }\n\n        gotShot(shot) {\n            if (shot.alive) {\n                if (this.lives <= 1) {\n                    this.die();\n                } else {\n                    this.lives--;\n                    app.spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 100, \"#FFCC00\");\n                }\n            }\n        }\n    }\n\n\n    class Planet extends GameObject{\n        /**\n         * Constructor for Planet (background objects) extends GameObject\n         * @param {string} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y ) {\n            super(src,x,y);\n        }\n\n        update(bounds) {\n            this.image.width = app.displayRect.width;\n            this.image.height = app.displayRect.height;\n            super.update();\n        }\n\n    }\n\n    class Enemy extends GameObject {\n        constructor(src, x, y, text, itempoints, termid) {\n            super(src,x,y);\n            this.xspeed = app.enemySpeed;\n            this.yspeed = app.enemySpeed * (2 + Math.random()) / 4;\n            this.movespeed.x = 0;\n            this.movespeed.y = 0;\n            this.direction.y = 1;\n            this.text = text;\n            this.itempoints = itempoints;\n            this.movementClock = 0;\n            this.shotFrequency = 80;\n            this.shotClock = (1 + Math.random()) * this.shotFrequency;\n            this.level = app.level;\n            this.termid = termid;\n\n        }\n        update(bounds) {\n            if (this.y < bounds.height / 10 || this.y > bounds.height * 9 / 10) {\n                this.movespeed.x = this.xspeed * 1;\n                this.movespeed.y = this.yspeed * 5;\n            } else {\n                this.movespeed.x = this.xspeed;\n                this.movespeed.y = this.yspeed;\n            }\n\n            super.update(bounds);\n\n            this.movementClock--;\n            this.movementClock--;\n\n            if (this.movementClock <= 0) {\n                this.direction.x = Math.floor(Math.random() * 3) - 1;\n                this.movementClock = (2 + Math.random()) * 30;\n            }\n\n            this.shotClock -= app.enemySpeed;\n\n            if (this.shotClock <= 0) {\n                if (this.y < bounds.height * 0.6) {\n                    app.playSound(\"enemylaser\");\n                    var shooter=this;\n                    var laser = new Laser(this.x, this.y, shooter);\n                    laser.direction.y = 1;\n                    laser.friendly = false;\n                    app.gameObjects.unshift(laser);\n                    this.shotClock = (1 + Math.random()) * this.shotFrequency;\n                }\n            }\n\n            if (this.x < bounds.x - this.image.width) {\n                this.x = bounds.width;\n            } else if (this.x > bounds.width) {\n                this.x = bounds.x - this.image.width;\n            }\n            if (this.y > bounds.height + this.image.height && this.alive) {\n                this.alive = false;\n                if (this.itempoints > 0) {\n                    app.currentPointsLeft -= this.itempoints;\n                    app.score -= 1000 * this.itempoints;\n                }\n\n                app.shipReachedEnd.call(this);\n            }\n        }\n\n        draw(context){\n\n            super.draw(context);\n            context.fillStyle = '#FFFFFF';\n            context.font = \"15px Audiowide\";\n            context.textAlign = 'center';\n\n            app.wrapText(context, this.text, true, 17, app.displayRect.width * 0.2, this.x + this.image.width / 2, this.y - 5);\n        }\n\n        die() {\n            super.die();\n            app.spray(this.x + this.image.width, this.y + this.image.height, 50 + (this.itempoints * 150), \"#FF0000\");\n\n            // Adjust Score.\n            app.score += this.itempoints * 1000;\n\n            //report the positive association\n            app.reportSuccess(this.termid);\n\n            // Kill off the ship.\n            app.playSound(\"explosion\");\n        }\n\n        gotShot(shot) {\n            // Default behaviour, to be overridden.\n            shot.die();\n            this.die();\n\n        }\n    }\n\n    class Laser extends GameObject {\n        constructor(x, y, shooter, friendly, laserSpeed) {\n\n            super(friendly ? \"pix/laser.png\" : \"pix/enemylaser.png\", x, y);\n            this.x = this.x + ((shooter.image.width - this.image.width) / 2);\n            this.direction.y = -1;\n            this.friendly = friendly ? 1 : 0;\n            this.laserSpeed = laserSpeed || 12;\n        }\n\n        update(bounds) {\n            super.update(bounds);\n            if (this.x < bounds.x - this.image.width ||\n                this.x > bounds.width ||\n                this.y < bounds.y - this.image.height ||\n                this.y > bounds.height) {\n                this.alive = false;\n            }\n            this.velocity.y = this.laserSpeed * this.direction.y;\n        };\n\n        deflect() {\n            this.image = this.loadImage(\"pix/enemylaser.png\");\n            this.direction.y *= -1;\n            this.friendly = !this.friendly;\n            app.playSound(\"deflect\");\n        };\n    }\n\n    class Particle extends GameObject {\n        constructor(x, y, velocity, colour) {\n            super(null, x, y);\n            this.width = 2;\n            this.height = 2;\n            this.velocity.x = velocity.x;\n            this.velocity.y = velocity.y;\n            this.aliveTime = 0;\n            this.colour = colour;\n            this.decay = 1;\n        }\n\n        update(bounds){\n            super.update(bounds);\n            if (this.x < bounds.x - this.width ||\n                this.x > bounds.width ||\n                this.y < bounds.y - this.height ||\n                this.y > bounds.height) {\n                this.alive = false;\n            }\n            this.aliveTime++;\n            if (this.aliveTime > (Math.random() * 15) + 5) {\n                this.alive = false;\n            }\n        }\n\n        getRect(){\n            return new Rectangle(this.x, this.y, this.width, this.height);\n        }\n\n        draw(context){\n            context.fillStyle = this.colour;\n            context.fillRect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n    }\n\n    class Star extends GameObject {\n            constructor(bounds) {\n                super( null, Math.random() * bounds.width, 0);\n                this.width = 2;\n                this.height = 2;\n                this.direction.y = 1;\n                this.movespeed.y = 0.2 + (Math.random() / 2);\n                this.aliveTime = 0;\n            }\n\n            update(bounds){\n                super.update(bounds);\n                if (this.y > bounds.height) {\n                    this.alive = false;\n                }\n            }\n\n            draw(context){\n                context.fillStyle = '#9999AA';\n                context.fillRect(this.x, this.y, this.width, this.height);\n                context.stroke();\n            }\n    }\n\n        /**\n         * multiple choice questions (MCQ)\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text\n         * @param {float} itempoints\n         * @param {boolean} single\n         */\n\n    class MultiEnemy extends Enemy {\n        constructor(x, y, text, itempoints, single,termid) {\n            super(\"pix/ship-enemy.png\", x, y, text, itempoints, termid);\n            this.single = single;\n        }\n\n        die() {\n            super.die();\n            if (this.itempoints > 0) {\n                app.currentPointsLeft -= this.itempoints;\n            }\n            //store the result for later processing\n            app.storeResult(this.termid, this.itempoints);\n            if ((this.single && this.itempoints === 1) && this.itempoints >= 1 || (this.itempoints > 0 && app.currentPointsLeft <= 0)) {\n                app.killAllAlive();\n                app.nextLevel();\n            }\n        }\n\n        gotShot(shot) {\n            if (this.itempoints > 0) {\n                shot.die();\n                this.die();\n\n                //report the positive association\n                app.reportSuccess(this.termid);\n\n            } else {\n                app.score += (this.itempoints - 0.5) * 600;\n\n                //record negative association for later processing\n                app.storeResult(this.termid, 0);\n\n                shot.deflect();\n            }\n        }\n    }\n\n    class MatchEnemy extends Enemy {\n        constructor(x, y, text, itempoints, pairid, stem, termid  ) {\n\n            if (stem) {\n                super(\"pix/enemystem.png\", x, y, text, itempoints, termid);\n            } else {\n                super(\"pix/enemychoice.png\", x, y, text, itempoints, termid);\n            }\n            this.stem = stem ? true : false;\n            this.pairid = pairid;\n            this.shotFrequency = 160;\n            this.hightlighted = false;\n        }\n\n        die() {\n            app.currentPointsLeft -= this.itempoints;\n            // Sets the itempoints as 0 to stop it adding to the score in #die()\n            this.itempoints = 0;\n            super.die();\n\n        }\n\n        gotShot(shot) {\n            if (shot.alive && this.alive) {\n                if (app.lastShot == -this.pairid) {\n\n                    // Increasing the score here instead of in #die(), due to rounding issues being a few numbers off.\n                    // This must be done before because when #die is invoked, as it sets the itempoints as 0.\n                    app.score += this.itempoints * 1000 * 2;\n\n                    //store the result for later processing\n                    app.storeResult(this.termid, this.itempoints);\n\n                    //report the positive association\n                    app.reportSuccess(this.termid);\n\n\n                    shot.die();\n                    this.die();\n                    var alives = 0;\n                    app.currentTeam.forEach(function (match) {\n                        if (match.pairid == app.lastShot) {\n                            match.die();\n                        }\n                        if (match.alive) {\n                            alives++;\n                        }\n                    });\n\n                    if (alives <= 0) {\n                        app.nextLevel();\n                    }\n                } else {\n                    if (app.lastShot == this.pairid) {\n                        shot.deflect();\n                    } else {\n                        shot.die();\n                        this.hightlight();\n                        app.lastShot = this.pairid;\n                    }\n                }\n            }\n        }\n\n        hightlight() {\n            app.currentTeam.forEach(function (match) {\n                match.unhightlight();\n            });\n            if (this.stem) {\n                this.loadImage(\"pix/enemystemselected.png\");\n            } else {\n                this.loadImage(\"pix/enemychoiceselected.png\");\n            }\n            this.hightlighted = true;\n        };\n\n        unhightlight() {\n            if (this.hightlighted) {\n                if (this.stem) {\n                    this.loadImage(\"pix/enemystem.png\");\n                } else {\n                    this.loadImage(\"pix/enemychoice.png\");\n                }\n            }\n            this.hightlighted = false;\n        }\n    }\n\n\n    var app = {\n        isFreeMode:  false,\n        questions: [],\n        quizgame: null,\n        stage: null,\n        score: 0,\n        particles: [],\n        gameObjects: [],\n        images: [\n            'pix/icon.gif',\n            'pix/planet.png',\n            'pix/ship.png',\n            'pix/ship-poodll.png',\n            'pix/enemy.png',\n            'pix/enemystem.png',\n            'pix/enemychoice.png',\n            'pix/enemystemselected.png',\n            'pix/enemychoiceselected.png',\n            'pix/laser.png',\n            'pix/enemylaser.png'\n        ],\n        imagesLoaded:  0,\n        loaded: false,\n        player: null,\n        planet: null,\n        level: -1,\n        displayRect: {x: 0, y: 0, width: 0, height: 0},\n        question: \"\",\n        interval: null,\n        enemySpeed: null,\n        touchDown: false,\n        mouseDown: false,\n        currentTeam: [],\n        lastShot: 0,\n        currentPointsLeft:  0,\n        context: null,\n        inFullscreen: false,\n        canShoot: true,\n        dryRun: false,\n        ttslanguage: 'en-US',\n        distractors: [],\n        controls: {},\n        results: [],\n        timer: null,\n\n    registerWordcardsEvents: function(){\n        //start the activity on click\n        $('body').on('click', '#wordcards-start-button', function() {\n            app.start();\n        });\n        $('body').on('click', \"#wordcards-try-again\", function() {\n            location.reload();\n        });\n\n        $('body').on('click', \"#wordcards-close-results\", function() {\n\n            var total_time = app.timer.count;\n            var url = app.nexturl.replace(/&amp;/g, '&') + \"&localscattertime=\" + total_time\n            window.location.replace(url);\n\n        });\n    },\n\n     registerSpaceGameEvents: function(){\n\n         document.onkeyup = this.keyup;\n         document.onkeydown = this.keydown;\n         document.onmouseup = this.mouseup;\n         document.onmousedown = this.mousedown;\n         document.onmousemove = this.mousemove;\n         document.ontouchstart = this.touchstart;\n         document.ontouchend = this.touchend;\n         document.addEventListener('touchmove',this.touchmove, {passive: false});\n         window.onresize = this.orientationChange;\n\n         document.addEventListener(\"gesturestart\", this.cancelled, false);\n         document.addEventListener(\"gesturechange\", this.cancelled, false);\n         document.addEventListener(\"gestureend\", this.cancelled, false);\n     }  ,\n\n    /**\n     * Play sound effect\n     * @param {string} soundName\n     */\n    playSound: function(soundName) {\n        if (document.getElementById(\"mod_wordcards_spacegame_sound_on\").checked) {\n            var soundElement = document.getElementById(\"mod_wordcards_sound_\" + soundName);\n            soundElement.currentTime = 0;\n            soundElement.play();\n        }\n    },\n\n    /**\n     * Adjust for small screens.\n     */\n    smallscreen: function() {\n        this.inFullscreen = false;\n\n        if (document.exitFullscreen) {\n            document.exitFullscreen().then(() => console.log(\"Document Exited from Full screen mode\"))\n                .catch((err) => console.error(err));\n        } else if (document.webkitExitFullscreen) { /* Safari */\n            document.webkitExitFullscreen();\n        } else if (document.msExitFullscreen) { /* IE11 */\n            document.msExitFullscreen();\n        }\n\n        this.stage.removeAttribute(\"width\");\n        this.stage.removeAttribute(\"height\");\n        this.stage.removeAttribute(\"style\");\n\n        this.stage.classList.remove(\"floating-game-canvas\");\n        $(\"#button_container\").removeClass(\"floating-button-container fixed-bottom\");\n\n        this.displayRect.width = this.stage.clientWidth;\n        this.displayRect.height = this.stage.clientHeight;\n        this.stage.style.width = this.displayRect.width;\n        this.stage.style.height = this.displayRect.height;\n\n        this.sizeScreen(this.stage);\n    },\n\n    /**\n     * Adjust screen size (switch between modes).\n     */\n   fschange: function() {\n        if (this.inFullscreen) {\n            this.smallscreen();\n        }\n    },\n\n    /**\n     * Expand to full screen.\n     */\n    fullscreen: function() {\n        var landscape = window.matchMedia(\"(orientation: landscape)\").matches;\n        try {\n            if (this.stage.requestFullscreen) {\n                this.stage.requestFullscreen();\n            } else if (this.stage.msRequestFullscreen) {\n                this.stage.msRequestFullscreen();\n            } else if (this.stage.mozRequestFullScreen) {\n                this.stage.mozRequestFullScreen();\n            }\n        } catch (e) {\n            log.debug(e,\"Fullscreen error: \");\n        }\n        // The stage.webkitRequestFullscreen() method was removed, due to very easily exiting of full screen in iOS,\n        // along with browser messages asking if you are typing in fullscreen.\n\n        this.inFullscreen = true;\n        var buttonContainer = $(\"#button_container\");\n\n        var width = window.innerWidth;\n\n        // The window.innerHeight returns an offset value on iOS devices in safari only\n        // while in portrait mode for some reason.\n        var height = $(window).height();\n\n        // Switch width and height\n        if (landscape && width < height) {\n            height = [width, width = height][0];\n        }\n\n        // Gets the actual button container height, then adds 16px; 8px on the\n        // top and 8px on the bottom for the page margin.\n        height -= buttonContainer.height() + 16;\n\n        this.displayRect.width = width;\n        this.displayRect.height = height;\n\n        this.stage.style.width = width + \"px\";\n        this.stage.style.height = height + \"px\";\n\n        // Makes the canvas float.\n        this.stage.classList.add(\"floating-game-canvas\");\n\n        // This makes the button container float below the game canvas.\n        buttonContainer.addClass(\"floating-button-container fixed-bottom\");\n\n        $(\"#mod_wordcards_spacegame_fullscreen_button\").blur(); // The button pressed was still focused, so a blur is necessary.\n\n        this.sizeScreen(this.stage);\n    },\n\n    /**\n     * Adjust screen size based on browser window.\n     * @param {object} stage\n     */\n    sizeScreen: function(stage) {\n\n        stage.width = this.displayRect.width;\n        stage.height = this.displayRect.height;\n        this.context.imageSmoothingEnabled = false;\n    },\n\n    /**\n     * Helper function for when the screen size chages due to rotating on mobile.\n     */\n    orientationChange: function() {\n        if (app.inFullscreen) {\n            app.fullscreen();\n        } else {\n            app.smallscreen();\n        }\n    },\n\n    /**\n     * Helper function to clear all events.\n     */\n    clearEvents: function() {\n        document.onkeydown = null;\n        document.onkeyup = null;\n        document.onmousedown = null;\n        document.onmouseup = null;\n        document.onmousemove = null;\n        document.ontouchstart = null;\n        document.ontouchend = null;\n        document.ontouchmove = null;\n        window.onresize = null;\n    },\n\n   storeResult: function(termid, points){\n        var theterm=false;\n       app.definitions.terms.forEach(function(term){\n            if(term.id==termid){\n                theterm = term;\n            }\n        });\n       //if we found the term, store the result\n       if(theterm) {\n           var result = {\n               question: app.strip_html(theterm['definition']),\n               selected: '',\n               correct: theterm['term'],\n               points: points,\n               id: theterm.id\n           };\n           for (var i=0;i<app.results.length;i++){\n               if(app.results[i].id==theterm.id){\n                   //if we have a duplicate and the earlier one is a fail, but this is a pass, replace it\n                   if(points>0 && app.results[i].points==0) {\n                       app.results.splice(i, 1);\n                   //otherwise we just keep the previous result\n                   }else{\n                       return;\n                   }\n               }\n           }\n           //storing result\n           app.results.push(result);\n       }\n   },\n\n    reportSuccess: function(termid) {\n        if (this.dryRun) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'mod_wordcards_report_successful_association',\n            args: {\n                termid: termid,\n                isfreemode: app.isFreeMode\n            }\n        }]);\n    },\n\n    reportFailure: function(term1id, term2id) {\n        if (this.dryRun) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'mod_wordcards_report_failed_association',\n            args: {\n                term1id: term1id,\n                term2id: term2id,\n                isfreemode: app.isFreeMode\n            }\n        }]);\n    },\n\n    /**\n     * Helper function to handle JS Events.\n     */\n    menuEvents: function() {\n        this.clearEvents();\n        document.onkeydown = this.menukeydown;\n        document.onmouseup = this.menumousedown;\n        document.ontouchend = this.menutouchend;\n        window.onresize = this.orientationChange;\n    },\n\n    /**\n     * Helper function to display game start screen\n     */\n    showMenu: function() {\n\n        this.context.clearRect(0, 0, this.displayRect.width, this.displayRect.height);\n\n        this.context.fillStyle = '#FFFFFF';\n        this.context.font = \"18px Audiowide\";\n        this.context.textAlign = 'center';\n\n        if (this.questions !== null && this.questions.length > 0) {\n            this.context.fillText(M.util.get_string('spacetostart', 'mod_wordcards'), this.displayRect.width / 2, this.displayRect.height / 2);\n            this.menuEvents();\n        } else {\n            this.context.fillText(M.util.get_string('emptyquiz', 'mod_wordcards'), this.displayRect.width / 2, this.displayRect.height / 2);\n        }\n    },\n\n    /**\n     * Helper function to load game objects\n     */\n    loadGame: function() {\n\n        //we already do this elsewhere\n        //this.shuffle(this.questions);\n\n        if (!this.loaded) {\n            this.images.forEach(function (src) {\n                var image = new Image();\n                image.src = src;\n                image.onload = function () {\n                    app.imagesLoaded++;\n                    if (app.imagesLoaded >= app.images.length) {\n                        app.gameLoaded();\n                    }\n                };\n            });\n            this.loaded = true;\n        } else {\n            this.startGame();\n        }\n    },\n\n    /**\n     * Helper function process game-over.\n     */\n    endGame: function() {\n\n\n        //clear full screen\n        if (app.inFullscreen) {\n            log.debug(\"quitting full screen\");\n            app.inFullscreen = false;\n            app.smallscreen();\n        }\n\n            clearInterval(app.timer.interval);\n            $(\"#wordcards-gameboard, #wordcards-start-button\").hide();\n            $(\"#wordcards-results\").show();\n\n            //template data\n            var tdata = [];\n            tdata['nexturl'] = this.nexturl;\n            tdata['results'] = app.results;\n            tdata['total'] = app.definitions.terms.length;\n            tdata['totalcorrect'] = a4e.calc_total_points(app.results);\n            tdata['gamescore'] = Math.round(app.score);\n            var total_time = app.timer.count;\n            if (total_time == 0) {\n                tdata['prettytime'] = '00:00';\n            } else {\n                tdata['prettytime'] = a4e.pretty_print_secs(total_time);\n            }\n\n            templates.render('mod_wordcards/feedback', tdata).then(\n                function(html, js) {\n\n                    $(\"#results-inner\").html(html);\n                    // Add listeners for the \"Add to my words\" buttons.\n                    require([\"mod_wordcards/mywords\"], function(mywords) {\n                        mywords.initFromFeedbackPage();\n                    });\n                }\n            );\n\n            var data = {\n                results: app.results,\n                activity: \"spacegame\"\n            };\n\n            if (!app.isFreeMode) {\n                Ajax.call([{\n                    methodname: 'mod_wordcards_report_step_grade',\n                    args: {\n                        modid: app.modid,\n                        correct: tdata['totalcorrect']\n                    }\n                }]);\n            }\n\n\n        /*\n                ajax.call([{\n                    methodname: 'mod_wordcards_update_score',\n                    args: {quizgameid: quizgame, score: Math.trunc(score)},\n                    fail: notification.exception\n                }]);\n\n         */\n\n\n\n        //we use wordcards end screen so we dont do menuevents,\n        // we just clear events so that the game doesnt restart and kill any ships left on stage\n        //this.menuEvents();\n        this.killAllAlive();\n        this.clearEvents();\n    },\n\n    /**\n     * Helper function process game ready.\n     */\n    gameLoaded: function() {\n\n        clearInterval(app.interval);\n\n        app.interval = setInterval(function () {\n            app.draw(app.context, app.displayRect, app.gameObjects, app.particles, app.question);\n            app.update(app.displayRect, app.gameObjects, app.particles);\n        }, 40);\n\n        this.startGame();\n    },\n\n    /**\n     * Helper function process game start.\n     */\n    startGame: function() {\n\n        this.score = 0;\n        this.gameObjects = [];\n        this.particles = [];\n        this.level = -1;\n        this.enemySpeed = 0.5;\n        this.touchDown = false;\n        this.mouseDown = false;\n        this.results=[];\n\n        // Queue & trigger the game_started event.\n        /*\n                ajax.call([{\n                    methodname: 'mod_wordcards_start_game',\n                    args: {quizgameid: quizgame},\n                    fail: notification.exception\n                }]);\n        */\n        this.player = new Player(\"pix/ship-poodll.png\", 0, 0);\n        this.player.x = this.displayRect.width / 2;\n        this.player.y = this.displayRect.height / 2;\n        this.gameObjects.push(this.player);\n\n        this.planet = new Planet(\"pix/planet.png\", 0, 0);\n        this.planet.image.width = this.displayRect.width;\n        this.planet.image.height = this.displayRect.height;\n        this.planet.direction.y = 1;\n        this.planet.movespeed.y = 0.7;\n        this.particles.push(this.planet);\n        //set up the timer\n        this.timer = {\n            interval: setInterval(function() {\n                app.timer.update();\n            }, 1000),\n            count: 0,\n            update: function() {\n                app.timer.count++;\n                $(\"#wordcards-time-counter\").text(a4e.pretty_print_secs(app.timer.count));\n            }\n        }\n\n        this.nextLevel();\n\n        this.registerSpaceGameEvents();\n    },\n\n    /**\n     * Helper function process next level (question).\n     */\n    nextLevel: function() {\n        this.level++;\n\n        // If we've run out of questions\n        if (this.level >= this.questions.length) {\n            //kill the player and end the game\n            app.player.die();\n\n            //previously we raised the speed, but we don't want to do that anymore\n            //we might go back on it though.. so its still here\n            /*\n            this.level = 0;\n            this.enemySpeed *= 1.3;\n            this.question = this.runLevel(this.questions, this.level, this.displayRect);\n            */\n\n        }else{\n            this.question = this.runLevel(this.questions, this.level, this.displayRect);\n        }\n\n    },\n\n    /**\n     * Helper function process current level.\n     * @param {array} questions\n     * @param {object} level\n     * @param {object} bounds\n     * @returns {string}\n     */\n    runLevel: function(questions, level, bounds) {\n        this.currentTeam = [];\n        this.lastShot = 0;\n        this.currentPointsLeft = 0;\n\n        switch(questions[level].type){\n            case 'matching':\n                var i = 0;\n                var itempoints = 1 / (questions[level].stems.length * 2);\n                this.currentPointsLeft += 1;\n                questions[level].stems.forEach(function (stem) {\n                    i++;\n                    var question = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        stem.question, itempoints, -i, true,stem.termid);\n                    var answer = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        stem.answer, itempoints, i,false,stem.termid);\n                    app.currentTeam.push(question);\n                    app.currentTeam.push(answer);\n                    app.gameObjects.push(question);\n                    app.gameObjects.push(answer);\n                });\n                break;\n\n            case 'multichoice':\n                questions[level].answers.forEach(function(answer) {\n                    var enemy = new MultiEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        answer.text, answer.itempoints, questions[level].single,  questions[level].termid);\n\n                    if (answer.itempoints < 1) {\n                        app.currentTeam.push(enemy);\n                        if (answer.itempoints > 0) {\n                            app.currentPointsLeft += answer.itempoints;\n                        }\n                    }\n                    app.gameObjects.push(enemy);\n                });\n        }\n        return questions[level].question;\n    },\n\n    /**\n     * Helper function to place text on screen\n     * @param {object} context\n     * @param {object} displayRect\n     * @param {objectc} objects\n     * @param {object} particles\n     * @param {string} question\n     */\n    draw: function(context, displayRect, objects, particles, question) {\n        context.clearRect(0, 0, displayRect.width, displayRect.height);\n        var i = 0;\n        for (i = 0; i < particles.length; i++) {\n            particles[i].draw(context);\n        }\n\n        for (i = 0; i < objects.length; i++) {\n            objects[i].draw(context);\n        }\n\n        if (this.player.alive) {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'left';\n            context.fillText(M.util.get_string('score', 'mod_wordcards',\n                {\n                    \"score\": Math.round(this.score), \"lives\": this.player.lives\n                }),\n                5, displayRect.height - 20);\n            context.textAlign = 'center';\n\n            this.wrapText(context, question, false, 20, displayRect.width * 0.9, displayRect.width / 2, 20);\n        } else {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'center';\n            context.fillText(M.util.get_string('endofgame', 'mod_wordcards',\n                Math.round(this.player.lastScore)),\n                displayRect.width / 2, displayRect.height / 2);\n        }\n    },\n\n    /**\n     * Helper function main game logic: process movements and behaviours of game objects\n     * @param {object} bounds\n     * @param {object} objects\n     * @param {object} particles\n     */\n    update: function(bounds, objects, particles) {\n        var i = 0;\n        for (i = 0; i < 3; i++) {\n            particles.push(new Star(bounds));\n        }\n        for (i = 0; i < particles.length; i++) {\n            particles[i].update(bounds);\n            if (!particles[i].alive) {\n                particles.splice(i, 1);\n                i--;\n            }\n        }\n        for (i = 0; i < objects.length; i++) {\n            objects[i].update(bounds);\n            for (var j = i + 1; j < objects.length; j++) {\n                this.collide(objects[i], objects[j]);\n            }\n            if (!objects[i].alive) {\n                objects.splice(i, 1);\n                i--;\n            }\n        }\n    },\n\n\n\n    /**\n     * Helper function to remove any stray ships on level advance\n     */\n    killAllAlive: function() {\n        this.currentTeam.forEach(function (enemy) {\n            if (enemy.alive) {\n                // Make the itempoints 0 so it won't count as anything and make a new level.\n                enemy.itempoints = 0;\n                enemy.die();\n            }\n        });\n        this.currentTeam = [];\n    },\n\n\n\n\n    /**\n     * Helper function to handle collisions between gameobjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    collide: function(object1, object2) {\n        return object1.alive && object2.alive && (this.collideOrdered(object1, object2) || this.collideOrdered(object2, object1));\n    },\n\n    /**\n     * Helper funcction to handle collisions.\n     * @param {object} object1\n     * @param {object} object2\n     * @returns {boolean}\n     */\n    collideOrdered: function(object1, object2) {\n        if (object1 instanceof Laser && object2 instanceof Player) {\n            if (!object1.friendly && app.objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                object1.die();\n                return true;\n            }\n        }\n        if (object1 instanceof Laser && object2 instanceof Enemy) {\n            if (object1.friendly && app.objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                return true;\n            }\n        }\n        if (object1 instanceof Player && object2 instanceof Enemy) {\n            if (app.objectsIntersect(object1, object2)) {\n                object1.die();\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\n     * Helper function to handle intersections between GameObjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    objectsIntersect: function(object1, object2) {\n        var rect1 = object1.getRect();\n        var rect2 = object2.getRect();\n        return rect1.Intersect(rect2);\n    },\n\n    /**\n     * Helper function for spraying particle (explosion) effects\n     * @param {int} x\n     * @param {int} y\n     * @param {int} num\n     * @param {string} colour\n     */\n    spray: function(x, y, num, colour) {\n        for (var i = 0; i < num; i++) {\n            this.particles.push(new Particle(x, y, {\n                x: (Math.random() - 0.5) * 16,\n                y: ((Math.random() - 0.5) * 16) + 3\n            }, colour));\n        }\n    },\n\n    /**\n     * Helper function to display answers.\n     * @param {object} context\n     * @param {string} input\n     * @param {bool} wrapUpwards\n     * @param {int} textHeight\n     * @param {int} maxLineWidth\n     * @param {int} x\n     * @param {int} y\n     */\n   wrapText: function(context, input, wrapUpwards, textHeight, maxLineWidth, x, y) {\n        var drawLines = [];\n        var originalY = y;\n        var words = input.split(' ');\n        var line = '';\n\n        // Loops through the words, and preprocesses each line with the correct string value and y location.\n        words.forEach(function (word) {\n            var tempLine = line + ' ' + word;\n            var metrics = context.measureText(tempLine);\n            var testWidth = metrics.width;\n\n            // If the line with the new word is too long, then push the current line without the new word to drawLines.\n            if (testWidth > maxLineWidth) {\n                drawLines.push({\n                    text: line,\n                    y: y += textHeight\n                });\n\n                line = word;\n            } else {\n                // If it's shorted than the limit, just add the word to the line and move on.\n                line = tempLine;\n            }\n        });\n\n        // Push the last line, if it exists.\n        drawLines.push({\n            text: line,\n            y: y += textHeight\n        });\n\n        // The offset the text was created.\n        var yOffset = y - originalY;\n\n        drawLines.forEach(function (drawLine) {\n            // If it is suppose to wrap upwards (i.e. for enemy ships) it shifts all questions upwards the amount the\n            // questions go down.\n            var modifier = wrapUpwards ? -yOffset : 0;\n\n            context.fillText(drawLine.text, x, drawLine.y + modifier);\n        });\n    },\n\n    /**\n     * Helper function for end of level.\n     */\n    shipReachedEnd: function() {\n\n        var amountLeft = app.currentTeam.filter(function (enemy) {\n            return enemy.alive;\n        }).length;\n\n        if (amountLeft === 0\n           // && (app.currentPointsLeft < app.itempoints || app.currentPointsLeft <= 0)\n            && app.player.alive) {\n            app.nextLevel();\n        }\n    },\n\n    /**\n     * Helper function for game menu from keyboard.\n     * @param {object} e\n     */\n    menukeydown: function(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32) {\n                app.loadGame();\n            }\n        }\n    },\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    menumousedown: function(e) {\n        if (e.target === app.stage) {\n            app.loadGame();\n        }\n    },\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    menutouchend: function(e) {\n        if (e.target === app.stage) {\n            app.loadGame();\n        }\n    },\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    keydown: function(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32 && app.player.alive && app.canShoot) {\n                app.player.Shoot();\n            } else if (e.keyCode === 37) {\n                app.player.direction.x = -1;\n            } else if (e.keyCode === 38) {\n                app.player.direction.y = -1;\n            } else if (e.keyCode === 39) {\n                app.player.direction.x = 1;\n            } else if (e.keyCode === 40) {\n                app.player.direction.y = 1;\n            }\n        }\n    },\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    keyup: function(e) {\n        if (e.keyCode === 32) {\n            app.canShoot = true;\n        } else if ([37, 39].indexOf(e.keyCode) !== -1) {\n            app.player.direction.x = 0;\n        } else if ([38, 40].indexOf(e.keyCode) !== -1) {\n            app.player.direction.y = 0;\n        }\n    },\n\n    /**\n     * Helper function for mouse click (starts the player shooting if you clicked on them, moving if you didn't).\n     * @param {object} e\n     */\n    mousedown: function(e) {\n        if (e.target === app.stage) {\n            var playerWasClicked = app.player.getRect().Contains({x: e.offsetX, y: e.offsetY});\n            if (playerWasClicked && app.player.alive) {\n                app.player.Shoot();\n            }\n            if (!app.mouseDown) {\n                app.player.mouse.x = e.offsetX;\n                app.player.mouse.y = e.offsetY;\n                app.mouseDown = true;\n            }\n        }\n    },\n\n    /**\n     * Helper function for mouse release. (stops the Player) for mouse mode\n     */\n    mouseup: function() {\n        app.player.direction.x = 0;\n        app.player.direction.y = 0;\n        app.mouseDown = false;\n    },\n\n    /**\n     * Helper function for mouse movement.\n     * @param {object} e\n     */\n    mousemove: function(e) {\n        app.player.mouse.x = e.offsetX;\n        app.player.mouse.y = e.offsetY;\n    },\n\n    /**\n     * Helper function for cancelled event.\n     * @param {object} event\n     */\n    cancelled: function(event) {\n        if (event.target === app.stage) {\n            event.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchstart: function(e) {\n        if (e.target === app.stage) {\n            if (app.player.alive && e.touches.length > 1) {\n                app.player.Shoot();\n            } else {\n                app.touchDown = true;\n                app.touchmove(e);\n            }\n\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchend: function(e) {\n        if (e.touches.length === 0) {\n            app.touchDown = false;\n        }\n        app.player.direction.x = 0;\n        app.player.direction.y = 0;\n\n        if (e.target === app.stage) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchmove: function(e) {\n        var rect = e.target.getBoundingClientRect();\n        // Required for getting the stage's relative touch position, due to a previous significant offset.\n        var x = e.touches[0].pageX - rect.left;\n        var y = e.touches[0].clientY - rect.top;\n\n        window.stage = app.stage;\n        app.player.mouse.x = x;\n        app.player.mouse.y = y - (2 * app.player.image.height);\n\n        if (e.target === app.stage) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function to shuffle levels.\n     * @param {array} array\n     * @return {array}\n     */\n    shuffle: function(array) {\n        var currentIndex = array.length;\n        var temporaryValue;\n        var randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    },\n\n   strip_html: function(htmlstring) {\n        return htmlstring.replace(/<\\/?[^>]+(>|$)/g, \"\");\n   },\n\n    process: function(definitions) {\n\n        a4e.list_vocab(\"#vocab-list-inner\", definitions.terms);\n\n        var terms = definitions.terms;\n        this.shuffle_array(terms);\n\n        //multichoice questions\n        //split into groups(ie \"levels\") of 5 terms (a single of mc of more than 5 terms is too much)\n        var chunkSize = 5;\n        if(terms.length) {chunkSize = terms.length;}\n        var mc_levels = this.split_array(terms, chunkSize);\n        //for each level build a set of chunksize questions with 1 correct and chunksize -1  distractors\n        for (var thelevel=0;thelevel<mc_levels.length;thelevel++) {\n            var level = mc_levels[thelevel];\n            //multiple choice questions\n            for (var i = 0; i < level.length; i++) {\n                var answers = [];\n                for (var j = 0; j < level.length; j++) {\n                    answers.push({\"text\": level[j].term,\"itempoints\": (i === j ? 1 : 0)});\n                }\n                this.questions.push({\n                    \"question\": app.strip_html(level[i].definition),\n                    \"termid\": level[i].id,\n                    \"answers\": answers,\n                    \"type\": \"multichoice\",\n                    \"single\": true\n                });\n            }\n        }\n\n\n        //matching questions\n        //split into groups(ie \"levels\") of 3 terms (even 4 terms = 8 items to shoot, its quite hard)\n        chunkSize=3;\n        var matching_levels = this.split_array(terms, chunkSize);\n        for (var thelevel=0;thelevel<matching_levels.length;thelevel++) {\n            var level = matching_levels[thelevel];\n            var subquestions = [];\n            for (var i = 0; i < level.length; i++) {\n                subquestions.push({question: level[i].term, answer: app.strip_html(level[i].definition),\"termid\": level[i].id});\n            }\n            this.questions.push({\"question\": \"matching\", \"stems\": subquestions, \"type\": \"matching\"});\n        }\n\n    },\n\n    shuffle_array: function(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    },\n\n     split_array: function(array, chunkSize) {\n            if(chunkSize == null){ chunkSize = 4};\n            var result = [];\n            var currentIndex = 0;\n\n            while (currentIndex < array.length) {\n                const chunk = array.slice(currentIndex, currentIndex + chunkSize);\n                if (chunk.length < chunkSize) {\n                    const remaining = chunkSize - chunk.length;\n                    // Reuse elements from previous chunks\n                    for (var i = 0; i < remaining; i++) {\n                        chunk.push(array[i]);\n                    }\n                }\n                result.push(chunk);\n                currentIndex += chunkSize;\n            }\n\n            return result;\n     },\n\n\n     init_controls: function() {\n        app.controls.close_results = $(\"#wordcards-close-results\");\n        app.controls.results = $(\"#wordcards-results\");\n        app.controls.vocab_list = $(\"#wordcards-vocab-list\");\n        app.controls.the_list = $(\"#speechcards_thelist\");\n        app.controls.gameboard = $(\"#wordcards-gameboard\");\n        app.controls.time_counter = $(\"#wordcards-time-counter\");\n    },\n\n    /**\n     * Initialization of the game.\n     * @param {array} props\n     */\n    init: function(props) {\n        //pick up opts from html\n        var theid = '#' + props.widgetid;\n        this.dryRun = props.dryRun;\n        this.nexturl = props.nexturl;\n        this.modid = props.modid;\n        this.isFreeMode = props.isfreemode;\n\n        var configcontrol = $(theid).get(0);\n        if (configcontrol) {\n            this.definitions = JSON.parse(configcontrol.value);\n            $(theid).remove();\n        } else {\n            //if there is no config we might as well give up\n            log.debug('No config found on page. Giving up.');\n            return;\n        }\n        //for now we do this the spacegme way\n        this.questionid = props.modid;\n\n        this.init_controls();\n        this.process(this.definitions);\n\n        a4e.register_events();\n        a4e.init_audio(props.token,props.region,props.owner);\n\n        //register the wordcards events\n        this.registerWordcardsEvents();\n       \n\n    },\n\n    start: function() {\n        //hide the intro screen with word cards\n        app.results = [];\n        app.controls.vocab_list.hide();\n        app.controls.gameboard.show();\n        app.controls.time_counter.text(\"00:00\");\n\n        //   a4e.progress_dots(app.results, app.terms);\n        app.timer = {\n            interval: setInterval(function() {\n                app.timer.update();\n            }, 1000),\n            count: 0,\n            update: function() {\n                app.timer.count++;\n                app.controls.time_counter.text(a4e.pretty_print_secs(app.timer.count));\n            }\n        }\n\n        //begin the game screen\n        if (document.addEventListener) {\n            document.addEventListener('fullscreenchange', this.fschange, false);\n            document.addEventListener('MSFullscreenChange', this.fschange, false);\n            document.addEventListener('mozfullscreenchange', this.fschange, false);\n            document.addEventListener('webkitfullscreenchange', this.fschange, false);\n        }\n        this.stage = document.getElementById(\"mod_wordcards_spacegame\");\n        this.context = this.stage.getContext(\"2d\");\n        this.smallscreen();\n        this.interval = setInterval(function () {\n            app.showMenu();\n        }, 500);\n\n        //full screen toggle button handler\n        $('#mod_wordcards_spacegame_fullscreen_button').on('click', function () {\n            if (app.inFullscreen) {\n                app.inFullscreen = false;\n                app.smallscreen();\n            } else {\n                app.fullscreen();\n            }\n        });\n\n\n    },\n\n}; //end of app declaration\n\n    return app;\n\n});\n"],"names":["define","$","Y","notification","ajax","a4e","log","templates","Ajax","Rectangle","constructor","left","top","width","height","right","this","bottom","Contains","point","x","y","Intersect","rectangle","GameObject","src","image","loadImage","velocity","direction","movespeed","alive","decay","Image","update","draw","context","drawImage","getRect","die","Player","mouse","lives","lastScore","bounds","app","mouseDown","touchDown","player","Shoot","playSound","gameObjects","unshift","Laser","canShoot","spray","score","endGame","gotShot","shot","Planet","displayRect","Enemy","text","itempoints","termid","xspeed","enemySpeed","yspeed","Math","random","movementClock","shotFrequency","shotClock","level","floor","laser","friendly","currentPointsLeft","shipReachedEnd","call","fillStyle","font","textAlign","wrapText","reportSuccess","shooter","laserSpeed","deflect","Particle","colour","aliveTime","fillRect","stroke","Star","MultiEnemy","single","storeResult","killAllAlive","nextLevel","MatchEnemy","pairid","stem","hightlighted","lastShot","alives","currentTeam","forEach","match","hightlight","unhightlight","isFreeMode","questions","quizgame","stage","particles","images","imagesLoaded","loaded","planet","question","interval","inFullscreen","dryRun","ttslanguage","distractors","controls","results","timer","registerWordcardsEvents","on","start","location","reload","total_time","count","url","nexturl","replace","window","registerSpaceGameEvents","document","onkeyup","keyup","onkeydown","keydown","onmouseup","mouseup","onmousedown","mousedown","onmousemove","mousemove","ontouchstart","touchstart","ontouchend","touchend","addEventListener","touchmove","passive","onresize","orientationChange","cancelled","soundName","getElementById","checked","soundElement","currentTime","play","smallscreen","exitFullscreen","then","console","catch","err","error","webkitExitFullscreen","msExitFullscreen","removeAttribute","classList","remove","removeClass","clientWidth","clientHeight","style","sizeScreen","fschange","fullscreen","landscape","matchMedia","matches","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","e","debug","buttonContainer","innerWidth","add","addClass","blur","imageSmoothingEnabled","clearEvents","ontouchmove","points","theterm","definitions","terms","term","id","result","strip_html","selected","correct","i","length","splice","push","methodname","args","isfreemode","reportFailure","term1id","term2id","menuEvents","menukeydown","menumousedown","menutouchend","showMenu","clearRect","fillText","M","util","get_string","loadGame","startGame","onload","gameLoaded","clearInterval","hide","show","tdata","calc_total_points","round","pretty_print_secs","render","html","js","require","mywords","initFromFeedbackPage","modid","setInterval","runLevel","type","stems","answer","answers","enemy","objects","j","collide","object1","object2","collideOrdered","objectsIntersect","rect1","rect2","num","input","wrapUpwards","textHeight","maxLineWidth","drawLines","originalY","words","split","line","word","tempLine","measureText","yOffset","drawLine","modifier","filter","indexOf","keyCode","preventDefault","target","offsetX","offsetY","event","touches","rect","getBoundingClientRect","pageX","clientY","shuffle","array","temporaryValue","randomIndex","currentIndex","htmlstring","process","list_vocab","shuffle_array","chunkSize","mc_levels","split_array","thelevel","definition","matching_levels","subquestions","chunk","slice","remaining","init_controls","close_results","vocab_list","the_list","gameboard","time_counter","init","props","theid","widgetid","configcontrol","get","JSON","parse","value","questionid","register_events","init_audio","token","region","owner","getContext"],"mappings":"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"}
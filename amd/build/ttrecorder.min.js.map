{"version":3,"sources":["../src/ttrecorder.js"],"names":["define","$","log","audioHelper","notification","debug","waveHeight","audio","stream","blob","dataURI","start","end","isRecording","isRecognizing","transcript","submitting","owner","controls","uniqueid","audio_updated","maxTime","passagehash","region","asrurl","lang","clone","extend","init","opts","that","callback","prepare_html","recordercontainer","show","register_events","audiohelper","onError","on_error","error","name","alert","onStop","on_stopped","clearInterval","interval","newaudio","URL","createObjectURL","Date","length","Math","round","update_audio","deepSpeech2","response","data","result","gotRecognition","trim","onStream","on_gotstream","currentTime","setInterval","stop","recorderbutton","newprops","val","theprop","click","toggleRecording","isComplete","show_recorder_pointer","show_recorder_complete","html","recordBtnContent","css","type","capturedspeech","cleanWord","word","replace","toLowerCase","bodyFormData","FormData","blobname","floor","random","append","oReq","XMLHttpRequest","open","onUploadProgress","onload","status","JSON","parse","console","send"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'mod_wordcards/ttaudiohelper', 'core/notification'], function ($, log, audioHelper, notification) {\n    \"use strict\"; // jshint ;_;\n    /*\n    *  The TT recorder\n     */\n\n    log.debug('TT Recorder: initialising');\n\n    return {\n        waveHeight: 75,\n        audio: {\n            stream: null,\n            blob: null,\n            dataURI: null,\n            start: null,\n            end: null,\n            isRecording: false,\n            isRecognizing: false,\n            transcript: null\n        },\n        submitting: false,\n        owner: '',\n        controls: {},\n        uniqueid: null,\n        audio_updated: null,\n        maxTime: 15000,\n        passagehash: null,\n        region: null,\n        asrurl: null,\n        lang: null,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(opts){\n\n            var that = this;\n\n            this.uniqueid=opts['uniqueid'];\n            this.callback=opts['callback'];\n            this.prepare_html();\n\n            this.controls.recordercontainer.show();\n\n            this.register_events();\n            this.audiohelper =  audioHelper.clone();\n            this.audiohelper.init(this.waveHeight,this.uniqueid,this);\n\n            var on_gotstream=  function(stream) {\n\n                var newaudio={stream: stream, isRecording: true};\n                that.update_audio(newaudio);\n                that.currentTime = 0;\n\n                that.interval = setInterval(function() {\n                    if (that.currentTime < that.maxTime) {\n                        that.currentTime += 10;\n                    } else {\n                        that.update_audio('isRecognizing',true);\n                        // vm.isRecognizing = true;\n                        that.audiohelper.stop();\n                    }\n                }, 10);\n\n            };\n\n            var on_error = function(error) {\n                switch (error.name) {\n                    case 'PermissionDeniedError':\n                    case 'NotAllowedError':\n                        notification.alert(\"Error\",'Please allow access to your microphone!', \"OK\");\n                        break;\n                    case 'DevicesNotFoundError':\n                    case 'NotFoundError':\n                        notification.alert(\"Error\",'No microphone detected!', \"OK\");\n                        break;\n                }\n            };\n\n            var on_stopped = function(blob) {\n                clearInterval(that.interval);\n\n                var newaudio = {\n                    blob: blob,\n                    dataURI: URL.createObjectURL(blob),\n                    end: new Date(),\n                    isRecording: false,\n                    length: Math.round((that.audio.end - that.audio.start) / 1000),\n                };\n                that.update_audio(newaudio);\n\n                that.deepSpeech2(that.audio.blob, function(response){\n                    log.debug(response);\n                    that.update_audio('isRecognizing',false);\n                    if(response.data.result===\"success\" && response.data.transcript){\n                        that.gotRecognition(response.data.transcript.trim());\n                    } else {\n                        notification.alert(\"Information\",\"We could not recognize your speech.\", \"OK\");\n                    }\n                });\n\n            };\n\n            that.audiohelper.onError = on_error;\n            that.audiohelper.onStop = on_stopped;\n            that.audiohelper.onStream = on_gotstream;\n        },\n\n        prepare_html: function(){\n            this.controls.recordercontainer =$('#ttrec_container_' + this.uniqueid);\n            this.controls.recorderbutton = $('#ttrec_' + this.uniqueid + '_recorderdiv');\n            this.passagehash =this.controls.recorderbutton.data('passagehash');\n            this.region=this.controls.recorderbutton.data('region');\n            this.asrurl=this.controls.recorderbutton.data('asrurl');\n            this.maxTime=this.controls.recorderbutton.data('maxtime');\n            this.waveHeight=this.controls.recorderbutton.data('waveheight');\n        },\n\n        update_audio: function(newprops,val){\n            if (typeof newprops === 'string') {\n                log.debug('update_audio:' + newprops + ':' + val);\n                if (this.audio[newprops] !== val) {\n                    this.audio[newprops] = val;\n                    this.audio_updated();\n                }\n            }else{\n                for (var theprop in newprops) {\n                    this.audio[theprop] = newprops[theprop];\n                    log.debug('update_audio:' + theprop + ':' + newprops[theprop]);\n                }\n                this.audio_updated();\n            }\n        },\n\n        register_events: function(){\n            var that = this;\n            this.controls.recordercontainer.click(function(){\n                that.toggleRecording();\n            });\n\n            this.audio_updated=function() {\n                //pointer\n                if (that.audio.isRecognizing || that.isComplete()) {\n                    that.show_recorder_pointer('none');\n                } else {\n                    that.show_recorder_pointer('auto');\n                }\n\n                //background WHEN?\n                if (that.isComplete()) {\n                    that.show_recorder_complete(true);\n                } else {\n                    that.show_recorder_complete(false);\n                }\n\n                //div content WHEN?\n                that.controls.recorderbutton.html(that.recordBtnContent());\n            }\n\n        },\n\n        show_recorder_pointer: function(show){\n            if(show) {\n                this.controls.recorderbutton.css('pointer-events', 'none');\n            }else{\n                this.controls.recorderbutton.css('pointer-events', 'auto');\n            }\n\n        },\n        show_recorder_complete: function(show){\n            if(show) {\n                this.controls.recorderbutton.css('background', 'green');\n            }else{\n                this.controls.recorderbutton.css('background', '#e52');\n            }\n        },\n\n        gotRecognition:function(transcript){\n            log.debug('transcript');\n            var message={};\n            message.type='speech';\n            message.capturedspeech = transcript;\n           //POINT\n            this.callback(message);\n        },\n\n        cleanWord: function(word) {\n            return word.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n        },\n\n        recordBtnContent: function() {\n\n            if(!this.audio.isRecognizing){\n                if (!this.isComplete()) {\n                    if (this.audio.isRecording) {\n                        return '<i class=\"fa fa-stop\">';\n                    } else {\n                        return '<i class=\"fa fa-microphone\">';\n                    }\n                } else {\n                    return '<i class=\"fa fa-check\">';\n                }\n            } else {\n                return '<i class=\"fa fa-spinner fa-spin\">';\n            }\n        },\n        toggleRecording: function() {\n            if (this.audio.isRecording) {\n                this.update_audio('isRecognizing',true);\n                this.audiohelper.stop();\n            } else {\n                this.start();\n            }\n        },\n\n        start: function() {\n            var newaudio = {\n                stream: null,\n                blob: null,\n                dataURI: null,\n                start: new Date(),\n                end: null,\n                isRecording: false,\n                isRecognizing:false,\n                transcript: null\n            };\n            this.update_audio(newaudio);\n            this.audiohelper.start();\n        },\n\n\n\n        deepSpeech2: function(blob, callback) {\n            var bodyFormData = new FormData();\n            var blobname = this.uniqueid + Math.floor(Math.random() * 100) +  '.wav';\n            bodyFormData.append('audioFile', blob, blobname);\n            bodyFormData.append('scorer', this.passagehash);\n\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"POST\", this.asrurl, true);\n            oReq.onUploadProgress= function(progressEvent) {};\n            oReq.onload = function(oEvent) {\n                if (oReq.status === 200) {\n                    callback(JSON.parse(oReq.response));\n                } else {\n                    console.error(oReq.error);\n                }\n            };\n            oReq.send(bodyFormData);\n\n        },\n\n        //not really OK here, this is something else\n        isComplete: function() {\n            return false;\n        },\n    };//end of return value\n\n});"],"file":"ttrecorder.min.js"}
{"version":3,"sources":["../src/ttrecorder.js"],"names":["define","$","log","audioHelper","notification","browserRec","debug","waveHeight","audio","stream","blob","dataURI","start","end","isRecording","isRecognizing","transcript","submitting","owner","controls","uniqueid","audio_updated","maxTime","passagehash","region","asrurl","lang","browserrec","usebrowserrec","clone","extend","init","opts","that","callback","prepare_html","recordercontainer","show","register_events","will_work_ok","audiohelper","onerror","on_error","onend","stop","update_audio","onstart","onfinalspeechcapture","speechtext","gotRecognition","on_gotstream","currentTime","interval","setInterval","error","name","alert","on_stopped","clearInterval","newaudio","URL","createObjectURL","Date","length","Math","round","deepSpeech2","response","data","result","trim","onError","onStop","onStream","recorderbutton","newprops","val","theprop","click","toggleRecording","isComplete","show_recorder_pointer","css","html","recordBtnContent","type","capturedspeech","cleanWord","word","replace","toLowerCase","bodyFormData","FormData","blobname","floor","random","append","oReq","XMLHttpRequest","open","onUploadProgress","onload","status","JSON","parse","console","send"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'mod_wordcards/ttaudiohelper', 'core/notification','mod_wordcards/ttbrowserrec'],\n    function ($, log, audioHelper, notification, browserRec) {\n        \"use strict\"; // jshint ;_;\n        /*\n        *  The TT recorder\n         */\n\n        log.debug('TT Recorder: initialising');\n\n        return {\n            waveHeight: 75,\n            audio: {\n                stream: null,\n                blob: null,\n                dataURI: null,\n                start: null,\n                end: null,\n                isRecording: false,\n                isRecognizing: false,\n                transcript: null\n            },\n            submitting: false,\n            owner: '',\n            controls: {},\n            uniqueid: null,\n            audio_updated: null,\n            maxTime: 15000,\n            passagehash: null,\n            region: null,\n            asrurl: null,\n            lang: null,\n            browserrec: null,\n            usebrowserrec: false,\n\n            //for making multiple instances\n            clone: function () {\n                return $.extend(true, {}, this);\n            },\n\n            init: function(opts){\n\n                var that = this;\n\n                this.uniqueid=opts['uniqueid'];\n                this.callback=opts['callback'];\n                this.prepare_html();\n                this.controls.recordercontainer.show();\n                this.register_events();\n\n                if(browserRec.will_work_ok()){\n                    this.browserrec = browserRec.clone();\n                    this.browserrec.init(this.lang,this.waveHeight,this.uniqueid);\n                    this.usebrowserrec=true;\n                }else{\n                    this.audiohelper =  audioHelper.clone();\n                    this.audiohelper.init(this.waveHeight,this.uniqueid,this);\n                }\n\n\n                if(this.usebrowserrec){\n                    that.browserrec.onerror = on_error;\n                    that.browserrec.onend = function(){\n                        that.browserrec.stop();\n                        that.update_audio('isRecording',false);\n                        that.update_audio('isRecognizing',false);\n                    };\n                    that.browserrec.onstart = function(){\n                        that.update_audio('isRecording',true);\n                    };\n                    that.browserrec.onfinalspeechcapture=function(speechtext){\n                        that.browserrec.stop();\n                        that.update_audio('isRecording',false);\n                        that.update_audio('isRecognizing',false);\n                        that.gotRecognition(speechtext);\n                    };\n                }else {\n\n                    var on_gotstream=  function(stream) {\n\n                        var newaudio={stream: stream, isRecording: true};\n                        that.update_audio(newaudio);\n                        that.currentTime = 0;\n\n                        that.interval = setInterval(function() {\n                            if (that.currentTime < that.maxTime) {\n                                that.currentTime += 10;\n                            } else {\n                                that.update_audio('isRecognizing',true);\n                                // vm.isRecognizing = true;\n                                that.audiohelper.stop();\n                            }\n                        }, 10);\n\n                    };\n\n                    var on_error = function(error) {\n                        switch (error.name) {\n                            case 'PermissionDeniedError':\n                            case 'NotAllowedError':\n                                notification.alert(\"Error\",'Please allow access to your microphone!', \"OK\");\n                                break;\n                            case 'DevicesNotFoundError':\n                            case 'NotFoundError':\n                                notification.alert(\"Error\",'No microphone detected!', \"OK\");\n                                break;\n                        }\n                    };\n\n                    var on_stopped = function(blob) {\n                        clearInterval(that.interval);\n\n                        //if ds recc\n                        var newaudio = {\n                            blob: blob,\n                            dataURI: URL.createObjectURL(blob),\n                            end: new Date(),\n                            isRecording: false,\n                            length: Math.round((that.audio.end - that.audio.start) / 1000),\n                        };\n                        that.update_audio(newaudio);\n\n                        that.deepSpeech2(that.audio.blob, function(response){\n                            log.debug(response);\n                            that.update_audio('isRecognizing',false);\n                            if(response.data.result===\"success\" && response.data.transcript){\n                                that.gotRecognition(response.data.transcript.trim());\n                            } else {\n                                notification.alert(\"Information\",\"We could not recognize your speech.\", \"OK\");\n                            }\n                        });\n\n                    };\n\n\n                    that.audiohelper.onError = on_error;\n                    that.audiohelper.onStop = on_stopped;\n                    that.audiohelper.onStream = on_gotstream;\n\n                }\n            },\n\n            prepare_html: function(){\n                this.controls.recordercontainer =$('#ttrec_container_' + this.uniqueid);\n                this.controls.recorderbutton = $('#ttrec_' + this.uniqueid + '_recorderdiv');\n                this.passagehash =this.controls.recorderbutton.data('passagehash');\n                this.region=this.controls.recorderbutton.data('region');\n                this.asrurl=this.controls.recorderbutton.data('asrurl');\n                this.lang=this.controls.recorderbutton.data('lang');\n                this.maxTime=this.controls.recorderbutton.data('maxtime');\n                this.waveHeight=this.controls.recorderbutton.data('waveheight');\n            },\n\n            update_audio: function(newprops,val){\n                if (typeof newprops === 'string') {\n                    log.debug('update_audio:' + newprops + ':' + val);\n                    if (this.audio[newprops] !== val) {\n                        this.audio[newprops] = val;\n                        this.audio_updated();\n                    }\n                }else{\n                    for (var theprop in newprops) {\n                        this.audio[theprop] = newprops[theprop];\n                        log.debug('update_audio:' + theprop + ':' + newprops[theprop]);\n                    }\n                    this.audio_updated();\n                }\n            },\n\n            register_events: function(){\n                var that = this;\n                this.controls.recordercontainer.click(function(){\n                    that.toggleRecording();\n                });\n\n                this.audio_updated=function() {\n                    //pointer\n                    if (that.audio.isRecognizing || that.isComplete()) {\n                        that.show_recorder_pointer('none');\n                    } else {\n                        that.show_recorder_pointer('auto');\n                    }\n\n                    if(that.audio.isRecognizing || that.audio.isRecording ) {\n                        this.controls.recorderbutton.css('background', '#e52');\n                    }else{\n                        this.controls.recorderbutton.css('background', 'green');\n                    }\n\n                    //div content WHEN?\n                    that.controls.recorderbutton.html(that.recordBtnContent());\n                }\n\n            },\n\n            show_recorder_pointer: function(show){\n                if(show) {\n                    this.controls.recorderbutton.css('pointer-events', 'none');\n                }else{\n                    this.controls.recorderbutton.css('pointer-events', 'auto');\n                }\n\n            },\n\n\n            gotRecognition:function(transcript){\n                log.debug('transcript:' + transcript);\n                var message={};\n                message.type='speech';\n                message.capturedspeech = transcript;\n                //POINT\n                this.callback(message);\n            },\n\n            cleanWord: function(word) {\n                return word.replace(/['!\"#$%&\\\\'()\\*+,\\-\\.\\/:;<=>?@\\[\\\\\\]\\^_`{|}~']/g,\"\").toLowerCase();\n            },\n\n            recordBtnContent: function() {\n\n                if(!this.audio.isRecognizing){\n                    if (!this.isComplete()) {\n                        if (this.audio.isRecording) {\n                            return '<i class=\"fa fa-stop\">';\n                        } else {\n                            return '<i class=\"fa fa-microphone\">';\n                        }\n                    } else {\n                        return '<i class=\"fa fa-check\">';\n                    }\n                } else {\n                    return '<i class=\"fa fa-spinner fa-spin\">';\n                }\n            },\n            toggleRecording: function() {\n                if (this.audio.isRecording) {\n                    if(this.usebrowserrec){\n                        this.browserrec.stop();\n                    }else{\n                        this.update_audio('isRecognizing',true);\n                        this.audiohelper.stop();\n                    }\n                } else {\n\n\n                    if(this.usebrowserrec){\n                        this.update_audio('isRecording',true);\n                        this.browserrec.start();\n                    }else {\n                        var newaudio = {\n                            stream: null,\n                            blob: null,\n                            dataURI: null,\n                            start: new Date(),\n                            end: null,\n                            isRecording: false,\n                            isRecognizing:false,\n                            transcript: null\n                        };\n                        this.update_audio(newaudio);\n                        this.audiohelper.start();\n                    }\n                }\n            },\n\n\n            deepSpeech2: function(blob, callback) {\n                var bodyFormData = new FormData();\n                var blobname = this.uniqueid + Math.floor(Math.random() * 100) +  '.wav';\n                bodyFormData.append('audioFile', blob, blobname);\n                bodyFormData.append('scorer', this.passagehash);\n                bodyFormData.append('lang', this.lang);\n\n                var oReq = new XMLHttpRequest();\n                oReq.open(\"POST\", this.asrurl, true);\n                oReq.onUploadProgress= function(progressEvent) {};\n                oReq.onload = function(oEvent) {\n                    if (oReq.status === 200) {\n                        callback(JSON.parse(oReq.response));\n                    } else {\n                        console.error(oReq.error);\n                    }\n                };\n                oReq.send(bodyFormData);\n\n            },\n\n            //not really OK here, this is something else\n            isComplete: function() {\n                return false;\n            },\n        };//end of return value\n\n    });"],"file":"ttrecorder.min.js"}
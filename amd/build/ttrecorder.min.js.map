{"version":3,"sources":["../src/ttrecorder.js"],"names":["define","$","log","audioHelper","notification","browserRec","debug","waveHeight","audio","stream","blob","dataURI","start","end","isRecording","isRecognizing","transcript","submitting","owner","controls","uniqueid","audio_updated","maxTime","passagehash","region","asrurl","lang","browserrec","usebrowserrec","clone","extend","init","opts","that","callback","prepare_html","recordercontainer","show","register_events","audiohelper","will_work_ok","onfinalspeechcapture","speechtext","stop","update_audio","gotRecognition","onError","on_error","error","name","alert","onStop","on_stopped","clearInterval","interval","newaudio","URL","createObjectURL","Date","length","Math","round","deepSpeech2","response","data","result","trim","onStream","on_gotstream","currentTime","setInterval","recorderbutton","newprops","val","theprop","click","toggleRecording","isComplete","show_recorder_pointer","show_recorder_complete","html","recordBtnContent","css","type","capturedspeech","cleanWord","word","replace","toLowerCase","bodyFormData","FormData","blobname","floor","random","append","oReq","XMLHttpRequest","open","onUploadProgress","onload","status","JSON","parse","console","send"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'mod_wordcards/ttaudiohelper', 'core/notification','mod_wordcards/ttbrowserrec'],\n    function ($, log, audioHelper, notification, browserRec) {\n    \"use strict\"; // jshint ;_;\n    /*\n    *  The TT recorder\n     */\n\n    log.debug('TT Recorder: initialising');\n\n    return {\n        waveHeight: 75,\n        audio: {\n            stream: null,\n            blob: null,\n            dataURI: null,\n            start: null,\n            end: null,\n            isRecording: false,\n            isRecognizing: false,\n            transcript: null\n        },\n        submitting: false,\n        owner: '',\n        controls: {},\n        uniqueid: null,\n        audio_updated: null,\n        maxTime: 15000,\n        passagehash: null,\n        region: null,\n        asrurl: null,\n        lang: null,\n        browserrec: null,\n        usebrowserrec: false,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(opts){\n\n            var that = this;\n\n            this.uniqueid=opts['uniqueid'];\n            this.callback=opts['callback'];\n            this.prepare_html();\n\n            this.controls.recordercontainer.show();\n\n            this.register_events();\n            this.audiohelper =  audioHelper.clone();\n            this.audiohelper.init(this.waveHeight,this.uniqueid,this);\n            if(browserRec.will_work_ok()){\n                this.browserrec = browserRec.clone();\n                this.browserrec.init(this.lang);\n                this.usebrowserrec=true;\n                this.browserrec.onfinalspeechcapture=function(speechtext){\n                    if(that.audio.isRecording) {\n                        that.audiohelper.stop();\n                    }\n                    that.update_audio('isRecognizing',false);\n                    that.gotRecognition(speechtext);};\n            }\n\n            var on_gotstream=  function(stream) {\n\n                var newaudio={stream: stream, isRecording: true};\n                that.update_audio(newaudio);\n                that.currentTime = 0;\n\n                //if user browwserrec\n                if(that.usebrowserrec) {\n                    that.browserrec.start();\n                }\n\n                that.interval = setInterval(function() {\n                    if (that.currentTime < that.maxTime) {\n                        that.currentTime += 10;\n                    } else {\n                        that.update_audio('isRecognizing',true);\n                        // vm.isRecognizing = true;\n                        that.audiohelper.stop();\n                    }\n                }, 10);\n\n            };\n\n            var on_error = function(error) {\n                switch (error.name) {\n                    case 'PermissionDeniedError':\n                    case 'NotAllowedError':\n                        notification.alert(\"Error\",'Please allow access to your microphone!', \"OK\");\n                        break;\n                    case 'DevicesNotFoundError':\n                    case 'NotFoundError':\n                        notification.alert(\"Error\",'No microphone detected!', \"OK\");\n                        break;\n                }\n            };\n\n            var on_stopped = function(blob) {\n                clearInterval(that.interval);\n\n                //if browserrec\n                if(that.usebrowserrec){\n                    that.browserrec.stop();\n                    return;\n                }\n\n                var newaudio = {\n                    blob: blob,\n                    dataURI: URL.createObjectURL(blob),\n                    end: new Date(),\n                    isRecording: false,\n                    length: Math.round((that.audio.end - that.audio.start) / 1000),\n                };\n                that.update_audio(newaudio);\n\n                that.deepSpeech2(that.audio.blob, function(response){\n                    log.debug(response);\n                    that.update_audio('isRecognizing',false);\n                    if(response.data.result===\"success\" && response.data.transcript){\n                        that.gotRecognition(response.data.transcript.trim());\n                    } else {\n                        notification.alert(\"Information\",\"We could not recognize your speech.\", \"OK\");\n                    }\n                });\n\n            };\n\n            that.audiohelper.onError = on_error;\n            that.audiohelper.onStop = on_stopped;\n            that.audiohelper.onStream = on_gotstream;\n        },\n\n        prepare_html: function(){\n            this.controls.recordercontainer =$('#ttrec_container_' + this.uniqueid);\n            this.controls.recorderbutton = $('#ttrec_' + this.uniqueid + '_recorderdiv');\n            this.passagehash =this.controls.recorderbutton.data('passagehash');\n            this.region=this.controls.recorderbutton.data('region');\n            this.asrurl=this.controls.recorderbutton.data('asrurl');\n            this.lang=this.controls.recorderbutton.data('lang');\n            this.maxTime=this.controls.recorderbutton.data('maxtime');\n            this.waveHeight=this.controls.recorderbutton.data('waveheight');\n        },\n\n        update_audio: function(newprops,val){\n            if (typeof newprops === 'string') {\n                log.debug('update_audio:' + newprops + ':' + val);\n                if (this.audio[newprops] !== val) {\n                    this.audio[newprops] = val;\n                    this.audio_updated();\n                }\n            }else{\n                for (var theprop in newprops) {\n                    this.audio[theprop] = newprops[theprop];\n                    log.debug('update_audio:' + theprop + ':' + newprops[theprop]);\n                }\n                this.audio_updated();\n            }\n        },\n\n        register_events: function(){\n            var that = this;\n            this.controls.recordercontainer.click(function(){\n                that.toggleRecording();\n            });\n\n            this.audio_updated=function() {\n                //pointer\n                if (that.audio.isRecognizing || that.isComplete()) {\n                    that.show_recorder_pointer('none');\n                } else {\n                    that.show_recorder_pointer('auto');\n                }\n\n                //background WHEN?\n                if (that.isComplete()) {\n                    that.show_recorder_complete(true);\n                } else {\n                    that.show_recorder_complete(false);\n                }\n\n                //div content WHEN?\n                that.controls.recorderbutton.html(that.recordBtnContent());\n            }\n\n        },\n\n        show_recorder_pointer: function(show){\n            if(show) {\n                this.controls.recorderbutton.css('pointer-events', 'none');\n            }else{\n                this.controls.recorderbutton.css('pointer-events', 'auto');\n            }\n\n        },\n        show_recorder_complete: function(show){\n            if(show) {\n                this.controls.recorderbutton.css('background', 'green');\n            }else{\n                this.controls.recorderbutton.css('background', '#e52');\n            }\n        },\n\n        gotRecognition:function(transcript){\n            log.debug('transcript:' + transcript);\n            var message={};\n            message.type='speech';\n            message.capturedspeech = transcript;\n           //POINT\n            this.callback(message);\n        },\n\n        cleanWord: function(word) {\n            return word.replace(/['!\"#$%&\\\\'()\\*+,\\-\\.\\/:;<=>?@\\[\\\\\\]\\^_`{|}~']/g,\"\").toLowerCase();\n        },\n\n        recordBtnContent: function() {\n\n            if(!this.audio.isRecognizing){\n                if (!this.isComplete()) {\n                    if (this.audio.isRecording) {\n                        return '<i class=\"fa fa-stop\">';\n                    } else {\n                        return '<i class=\"fa fa-microphone\">';\n                    }\n                } else {\n                    return '<i class=\"fa fa-check\">';\n                }\n            } else {\n                return '<i class=\"fa fa-spinner fa-spin\">';\n            }\n        },\n        toggleRecording: function() {\n            if (this.audio.isRecording) {\n                this.update_audio('isRecognizing',true);\n                this.audiohelper.stop();\n            } else {\n                this.start();\n            }\n        },\n\n        start: function() {\n            var newaudio = {\n                stream: null,\n                blob: null,\n                dataURI: null,\n                start: new Date(),\n                end: null,\n                isRecording: false,\n                isRecognizing:false,\n                transcript: null\n            };\n            this.update_audio(newaudio);\n            this.audiohelper.start();\n        },\n\n\n\n        deepSpeech2: function(blob, callback) {\n            var bodyFormData = new FormData();\n            var blobname = this.uniqueid + Math.floor(Math.random() * 100) +  '.wav';\n            bodyFormData.append('audioFile', blob, blobname);\n            bodyFormData.append('scorer', this.passagehash);\n            bodyFormData.append('lang', this.lang);\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"POST\", this.asrurl, true);\n            oReq.onUploadProgress= function(progressEvent) {};\n            oReq.onload = function(oEvent) {\n                if (oReq.status === 200) {\n                    callback(JSON.parse(oReq.response));\n                } else {\n                    console.error(oReq.error);\n                }\n            };\n            oReq.send(bodyFormData);\n\n        },\n\n        //not really OK here, this is something else\n        isComplete: function() {\n            return false;\n        },\n    };//end of return value\n\n});"],"file":"ttrecorder.min.js"}
{"version":3,"sources":["../src/ttbrowserrec.js"],"names":["define","$","log","debug","recognition","recognizing","ignore_onend","final_transcript","start_timestamp","lang","interval","clone","extend","will_work_ok","window","init","waveheight","uniqueid","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","waveHeight","prepare_html","register_events","canvas","canvasCtx","getContext","set_grammar","grammar","SpeechGrammarList","webkitSpeechGrammarList","speechRecognitionList","addFromString","grammars","start","that","Date","now","setInterval","drawWave","stop","clearInterval","clearRect","width","onstart","onerror","event","error","timeStamp","onend","onresult","interim_transcript","i","resultIndex","results","length","isFinal","transcript","onfinalspeechcapture","JSON","stringify","oninterimspeechcapture","bufferLength","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","x","v","Math","random","y","lineTo","stroke","speechtext"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('speech_browser: initialising');\n\n    return {\n\n        recognition: null,\n        recognizing: false,\n        ignore_onend: false,\n        final_transcript: '',\n        start_timestamp: 0,\n        lang: 'en-US',\n        interval: 0,\n\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        will_work_ok: function(opts){\n            return 'webkitSpeechRecognition' in window || 'SpeechRecognition' in window;\n        },\n\n        init: function (lang,waveheight,uniqueid) {\n            var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\n            this.recognition = new SpeechRecognition();\n            this.recognition.continuous = true;\n            this.recognition.interimResults = true;\n            this.lang = lang;\n            this.waveHeight = waveheight;\n            this.uniqueid = uniqueid;\n            this.prepare_html();\n            this.register_events();\n        },\n\n        prepare_html: function(){\n            this.canvas =$('#' + this.uniqueid + \"_waveform\");\n            this.canvasCtx = this.canvas[0].getContext(\"2d\");\n        },\n\n        set_grammar: function (grammar) {\n            var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;\n            if (SpeechGrammarList) {\n                var speechRecognitionList = new SpeechGrammarList();\n                speechRecognitionList.addFromString(grammar, 1);\n                this.recognition.grammars = speechRecognitionList;\n            }\n        },\n\n        start: function () {\n            var that =this;\n\n            //If we already started ignore this\n            if (this.recognizing) {\n                return;\n            }\n            this.recognizing = true;\n            this.final_transcript = '';\n            this.recognition.lang = this.lang;//select_dialect.value;\n            this.recognition.start();\n            this.ignore_onend = false;\n            this.start_timestamp = Date.now();//event.timeStamp;\n\n            //kick off animation\n            that.interval = setInterval(function() {\n                that.drawWave();\n            }, 100);\n\n\n        },\n        stop: function () {\n            this.recognizing = false;\n            this.recognition.stop();\n            clearInterval(this.interval);\n            this.canvasCtx.clearRect(0, 0, this.canvas.width()*2, this.waveHeight * 2);\n\n        },\n\n        register_events: function () {\n\n            var recognition = this.recognition;\n            var that = this;\n\n            recognition.onstart = function () {\n                that.recognizing = true;\n                that.onstart();\n\n            };\n            recognition.onerror = function (event) {\n                if (event.error == 'no-speech') {\n                    log.debug('info_no_speech');\n                    that.ignore_onend = true;\n                }\n                if (event.error == 'audio-capture') {\n                    log.debug('info_no_microphone');\n                    that.ignore_onend = true;\n                }\n                if (event.error == 'not-allowed') {\n                    if (event.timeStamp - that.start_timestamp < 100) {\n                        log.debug('info_blocked');\n                    } else {\n                        log.debug('info_denied');\n                    }\n                    that.ignore_onend = true;\n                }\n                that.onerror();\n            };\n            recognition.onend = function () {\n                //that.recognizing = false;\n\n                // we restart by default\n                // we might need to be more clever here\n                if (that.recognizing == false) {\n                    return;\n                }\n                if (that.ignore_onend) {\n                    that.recognizing = false;\n                } else {\n                    recognition.start();\n                }\n                that.onend();\n\n            };\n            recognition.onresult = function (event) {\n                var interim_transcript = '';\n                for (var i = event.resultIndex; i < event.results.length; ++i) {\n                    if (event.results[i].isFinal) {\n                        that.final_transcript += event.results[i][0].transcript;\n                        that.onfinalspeechcapture(that.final_transcript,JSON.stringify(event.results));\n                        that.final_transcript = '';\n                    } else {\n                        interim_transcript += event.results[i][0].transcript;\n                        that.oninterimspeechcapture(interim_transcript);\n                    }\n                }\n\n            };\n        },//end of register events\n\n        drawWave: function() {\n\n            var width = this.canvas.width() * 2;\n            var bufferLength=4096;\n\n            this.canvasCtx.fillStyle = 'white';\n            this.canvasCtx.fillRect(0, 0, width, this.waveHeight*2);\n\n            this.canvasCtx.lineWidth = 5;\n            this.canvasCtx.strokeStyle = 'gray';\n            this.canvasCtx.beginPath();\n\n            var slicewaveWidth = width / bufferLength;\n            var x = 0;\n\n            for (var i = 0; i < bufferLength; i++) {\n\n                var v = ((Math.random() * 64) + 96) / 128.0;\n                var y = v * this.waveHeight;\n\n                if (i === 0) {\n                    // this.canvasCtx.moveTo(x, y);\n                } else {\n                    this.canvasCtx.lineTo(x, y);\n                }\n                x += slicewaveWidth;\n            }\n\n            this.canvasCtx.lineTo(width, this.waveHeight);\n            this.canvasCtx.stroke();\n\n        },\n\n        onstart: function () {\n            log.debug('started');\n        },\n        onerror: function () {\n            log.debug('error');\n        },\n        onend: function () {\n            log.debug('end');\n        },\n        onfinalspeechcapture: function (speechtext,speechresults) {\n            log.debug(speechtext);\n        },\n        oninterimspeechcapture: function (speechtext) {\n            // log.debug(speechtext);\n        }\n\n    };//end of returned object\n});//total end\n"],"file":"ttbrowserrec.min.js"}